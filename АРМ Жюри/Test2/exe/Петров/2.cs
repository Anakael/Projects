public class SortWrapper{   internal ListViewItem sortItem;   internal int sortColumn;    public SortWrapper(ListViewItem Item, int iColumn)   {      sortItem = Item;      sortColumn = iColumn;   }    public string Text   {      get { return sortItem.SubItems[sortColumn].Text; }   } public class SortComparer : IComparer{   bool ascending;   public SortComparer(bool asc)   {      this.ascending = asc;   }    public int Compare(object x, object y)   {      SortWrapper xItem = (SortWrapper)x;      SortWrapper yItem = (SortWrapper)y;       decimal value;      if (decimal.TryParse(xItem.sortItem.SubItems[xItem.sortColumn].Text, out value)) // Returns bool      {         decimal xText = Convert.ToDecimal(xItem.sortItem.SubItems[xItem.sortColumn].Text);         decimal yText = Convert.ToDecimal(yItem.sortItem.SubItems[yItem.sortColumn].Text);         return xText.CompareTo(yText) * (this.ascending ? 1 : -1);      }      else      {         string xText = xItem.sortItem.SubItems[xItem.sortColumn].Text;         string yText = yItem.sortItem.SubItems[yItem.sortColumn].Text;         return xText.CompareTo(yText) * (this.ascending ? 1 : -1);      }   }}