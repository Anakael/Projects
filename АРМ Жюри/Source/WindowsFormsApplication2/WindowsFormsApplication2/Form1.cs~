using System;
using System.Collections.Generic;
using System.ComponentModel;
using Excel =  Microsoft.Office.Interop.Excel;
using System.Drawing;
using System.Diagnostics;
using System.Windows.Forms;
using System.IO;

namespace WindowsFormsApplication2
{
    
    public partial class MainForm : Form
    {
        
        public MainForm()
        {
            InitializeComponent();
        }




        FileInfo fi;
        List<string> lstr = new List<string>();
 

        private void StartTest_Click(object sender, EventArgs e)
        {
            float TimeLimit = 0;
            
            float nerf = 0;
            float KF=0;
            string pupilAnswer = string.Empty;
            string realAnswer = string.Empty;
            LogReach.Clear();
            float prizeTime = 0;

            foreach (Control con in myform.Controls)

                if (con.Name == "timeLimit")
                    TimeLimit = float.Parse(con.Text);
            if (dataGridView2.Columns.Contains("Position"))
                 dataGridView2.Columns.Remove("Position");
            bool flag = false;
            double sum = 0;
            float maxBallforPupil = 0;
            float maxBallforTask = 0;
            if (myform.CustomSystem.Checked)
            {
                foreach (Control con in myform.Controls)
                {
                    if (con.Name == "MaxBall")
                    {
                        maxBallforPupil = float.Parse(con.Text);
                        maxBallforTask = float.Parse(con.Text)/myform.testTaskDirBox.Items.Count;
                    }
                    if (con.Name == "KFF")
                         KF = float.Parse(con.Text);
                    

                }
            }
            if (myform.bonusTime.Checked)
                foreach (Control con in myform.Controls)
                    if (con.Name == "prizeTime")
                        prizeTime = float.Parse(con.Text);



            if (myform.checkBox2.Checked)
                foreach (Control con in myform.Controls)
            if (con.Name == "textBox1")
                nerf = float.Parse(con.Text);

            float tmpnerf = nerf;

            DateTime dt = new DateTime();
            dataGridView1.Show();
            StreamReader streamIn;
            StreamReader streamOut;
            ProcessStartInfo psi;
            System.Diagnostics.Process pr = new Process();
            int n = 0;


            for (int i = 0; i < myform.exeNameBox.Items.Count; i++)
            {



                myform.exeFileExe.Items.Clear();
                myform.exeFileExe.Items.AddRange(Directory.GetFiles(myform.exeNameBox.Items[i].ToString()));


                fi = new FileInfo(myform.exeNameBox.Items[i].ToString());
                LogReach.SelectionFont = new Font("Microsoft Sans Serif", 11, FontStyle.Bold);
                LogReach.AppendText("\t "+fi.Name + "\n");
                

                for (int k = 1; k <= myform.testTaskDirBox.Items.Count; k++)
                {
                    tmpnerf = nerf;

                    LogReach.SelectionFont = new Font("Microsoft Sans Serif", float.Parse("8,25"), FontStyle.Italic);
                    LogReach.SelectionColor = default(Color);
                    LogReach.AppendText("Задача " + k + ":\n");
                     LogReach.AppendText("\n");

                     
                    foreach (string path in myform.exeFileExe.Items)
                     {
                        fi = new FileInfo(path); 
                          if (fi.Name == k.ToString() + ".exe") 
                          {
                              
                         foreach (string put in myform.exeFileExe.Items)
                          {
                             fi = new FileInfo(put);
                                    if ((fi.Name == k.ToString() + ".c") || (fi.Name == k.ToString() + ".h")
                                    || (fi.Name == k.ToString() + ".cpp") || (fi.Name == k.ToString() + ".hpp")
                                    || (fi.Name == k.ToString() + ".cs") || (fi.Name == k.ToString() + ".pas"))
                                    {
                                        tmpnerf = 0;
                                        break;
                                    }

                                }
                              myform.testTaskFileBox.Items.Clear();
                              myform.outputOriginFileBox.Items.Clear();
                              myform.testTaskFileBox.Items.AddRange(Directory.GetFiles(myform.testTaskDirBox.Items[k - 1].ToString()));
                              myform.outputOriginFileBox.Items.AddRange(Directory.GetFiles(myform.outputOriginDirBox.Items[k - 1].ToString()));
                              //цикл на прокрутку
                              for (int l = 0; l < myform.testTaskFileBox.Items.Count; l++)
                             {
                                 foreach (FileInfo f in myform.inputInfo.GetFiles())
                                     f.Delete();

                                 foreach (FileInfo f in myform.outputInfo.GetFiles())
                                     f.Delete();

                                 File.Copy(myform.testTaskFileBox.Items[l].ToString(), myform.inputInfo.ToString() + @"\" + k.ToString() + "." + "txt");
                                 File.Copy(myform.outputOriginFileBox.Items[l].ToString(), myform.outputInfo.ToString() + @"\" + k.ToString() + "." + "txt");
                                 /*
                                копирование, переименование файла
                               */

                                 psi = new ProcessStartInfo(path);
                                 pr.StartInfo = psi;
                                 dt = DateTime.Now;
                                 pr.Start();
                                 
                                 while ((DateTime.Now.Ticks - dt.Ticks) / TimeSpan.TicksPerSecond < 3)   
                                 {
                                     if (pr.HasExited)                                           
                                     {
                                         flag = true;
                                         break;
                                     }
                                     
                                 }
                                 if (!flag)
                                     pr.Kill();
                                 else
                                 {
                                     flag = false;
                                     //pr.Close();
                                     streamIn = new StreamReader(myform.inputInfo.ToString() + @"\" + k.ToString() + "." + "txt");

                                     if (File.Exists(myform.outputInfo.ToString() + @"\" + k.ToString() + "." + "txt"))
                                         streamOut = new StreamReader(myform.outputInfo.ToString() + @"\" + k.ToString() + "." + "txt");
                                     else continue;

                                     pupilAnswer = streamIn.ReadToEnd();
                                    
                                     realAnswer = streamOut.ReadToEnd();
                                     LogReach.AppendText("Тест " + (l + 1) + ":\n");
                                    
                                     
                                         //сравнение  с рил отутпут
                                         if (pupilAnswer == realAnswer)
                                         {
                                             LogReach.AppendText(realAnswer + "\n");
                                             LogReach.SelectionColor = Color.Green;
                                             LogReach.AppendText(pupilAnswer + "\n");
                                            // LogReach.SelectionColor = Color.Green;
                                             
                                             LogReach.AppendText("\n");
                                             LogReach.SelectionColor = default(Color);
                                             n++;
                                         }
                                         else
                                         {
                                             LogReach.AppendText(realAnswer + "\n");
                                             LogReach.SelectionFont = new Font("Microsoft Sans Serif", float.Parse("8,25"), FontStyle.Bold);
                                             LogReach.SelectionColor = Color.Red;
                                             LogReach.AppendText(pupilAnswer + "\n");
                                             //LogReach.ForeColor = Color.Red;
                                             
                                             LogReach.AppendText("\n");
                                             LogReach.SelectionColor = default(Color);
                                         }
                                     
                                         streamIn.Close();
                                         streamOut.Close();
                                     
                                 }

                             }

                           }
                         /*   else if (Другое разрешение)    */
                      }
                      if (myform.StudentSystem.Checked)
                      {
                         
                          if (n == myform.testTaskFileBox.Items.Count)
                          {
                              dataGridView1[k, i].Value = "1";
                              dataGridView1[k, i].Style.BackColor = Color.Green;
                          }
                          else
                          {
                              dataGridView1[k, i].Value = "0";
                              dataGridView1[k, i].Style.BackColor = Color.Red;
                          }
                      }
                      else
                      {

                          dataGridView1[k, i].Value = maxBallforTask / myform.testTaskFileBox.Items.Count * n;
                          if(float.Parse(dataGridView1[k, i].Value.ToString()) == maxBallforTask)
                              dataGridView1[k, i].Style.BackColor = Color.Green;
                          else if (double.Parse(dataGridView1[k, i].Value.ToString()) <= 0)
                          {
                              dataGridView1[k, i].Value = 0;
                              dataGridView1[k, i].Style.BackColor = Color.Red;
                          }

                      }
                      n = 0;
                    psi = new ProcessStartInfo();
                   
                  }
                        
               }
            
          /*  for (int i = 0; i <=dataGridView1.RowCount -2 ; i++)
            {
                for (int j = 1; j <= dataGridView1.ColumnCount -2; j++)
                {
                    sum += double.Parse(dataGridView1[j, i].Value.ToString());
                   
                }
                dataGridView1[dataGridView1.ColumnCount -1, i].Value = sum;
                sum = 0;
            }*/
            





            double ball = 0;
            DateTime tmpDT = new DateTime();

            if (myform.bonusTime.Checked)
            {
                for (int i = 0; i < dataGridView1.RowCount-1; i++)
                {
                    if (double.Parse(dataGridView1[dataGridView1.ColumnCount - 1, i].Value.ToString()) == maxBallforPupil)  //Need changed!!
                    {
                        for (int j = 0; j <myform.exeNameBox.Items.Count; j++)
                        
                        {
                            fi = new FileInfo(myform.exeNameBox.Items[j].ToString());
                            if (fi.Name == dataGridView1[0,i].Value.ToString())
                            {
                                tmpDT = Directory.GetLastWriteTime(myform.exeNameBox.Items[j].ToString());
                                ball = double.Parse(dataGridView1[dataGridView1.ColumnCount - 1, i].Value.ToString());                               
                                ball += (myform.dateTimePicker1.Value.Ticks - tmpDT.Ticks) / TimeSpan.TicksPerMinute * prizeTime;
                                dataGridView1[dataGridView1.ColumnCount - 1, i].Value = ball;
                            }
                        }                       
                    }
                    
                }
                              
            }            
        }
 

        private void dataGridView1_ColumnHeaderMouseClick(object sender, DataGridViewCellMouseEventArgs e)
        {
            if (e.ColumnIndex == dataGridView1.ColumnCount - 1)
                dataGridView1.Sort(dataGridView1.Columns.GetLastColumn(DataGridViewElementStates.None, DataGridViewElementStates.None), ListSortDirection.Descending);            
    
            if ((!dataGridView1.Columns.Contains("Position")) && (dataGridView1.Columns.Count>1)) { 
            dataGridView1.Columns.Add("Position","Занятое место");
            dataGridView1[dataGridView1.ColumnCount - 1, 0].Value = 1;
                for (int i = 1; i <= dataGridView1.RowCount - 2; i++)                                       //NEED USE!!!
                {
                    if (dataGridView1[dataGridView1.ColumnCount - 1, i] ==
                        dataGridView1[dataGridView1.ColumnCount - 1, i - 1])

                        dataGridView1[dataGridView1.ColumnCount - 1, i].Value =
                            dataGridView1[dataGridView1.ColumnCount - 1, i - 1].Value;
                    else

                        dataGridView1[dataGridView1.ColumnCount - 1, i].Value =
                            int.Parse(dataGridView1[dataGridView1.ColumnCount - 1, i - 1].Value.ToString()) + 1;
                }
            }
        }

 

        private void Form1_Load(object sender, EventArgs e)
        {

          myform    = new Form2();

        }
        Form2 myform;

        private void button1_Click_2(object sender, EventArgs e)
        {
            myform.Show();
        }

        private void очиститьToolStripMenuItem_Click_1(object sender, EventArgs e)
        {
            dataGridView1.Rows.Clear();
            dataGridView1.Columns.Clear();
            dataGridView1.Columns.Add("FIO", "Ф.И.О Участника");

            dataGridView2.Rows.Clear();
            dataGridView2.Columns.Clear();
            dataGridView2.Columns.Add("FIO", "Ф.И.О Участника");
        }

 

        private void выходToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void экспортВExcelToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Excel.Application excelApplication = new Excel.Application();
            Excel.Workbook ObjWorkBook;
            Excel.Worksheet ObjWorkSheet;
            
            //Книга.
            ObjWorkBook = excelApplication.Workbooks.Add();
            //Таблица.
            ObjWorkSheet = (Excel.Worksheet)ObjWorkBook.Sheets[1];

            excelApplication.Visible = true;
            excelApplication.UserControl = true;

            for (int i = 0; i < dataGridView1.ColumnCount; i++)
            {
                ObjWorkSheet.Cells[1, i + 1] = dataGridView1.Columns[i].HeaderText;
            }

            for (int i = 0; i < dataGridView1.RowCount; i++)
            {
                ObjWorkSheet.Cells[i + 2, 1] = dataGridView1[0, i].Value;
            }
            for (int i = 1; i <= dataGridView1.ColumnCount - 1; i++)
            {

                for (int j = 0; j < dataGridView1.RowCount; j++)
                {
                    ObjWorkSheet.Cells[j + 2, i + 1] = dataGridView1[i, j].Value;
                }
            }
        }

        private void aboutToolStripMenuItem_Click(object sender, EventArgs e)
        {
            AboutBox1 about = new AboutBox1();
            about.Show();

        }

        private void SourceName_SelectedIndexChanged(object sender, EventArgs e)
        {

            SourceTask.Items.Clear();
            ListBox sour = new ListBox();
            lstr.Clear();
            sour.Items.AddRange(Directory.GetFiles(myform.exeNameBox.Items[SourceName.SelectedIndex].ToString()));
            for (int i = 1; i <= myform.testTaskDirBox.Items.Count; i++)
            {
                foreach (string path in sour.Items)
                {
                fi = new FileInfo(path);
                if ((fi.Name == i.ToString() + ".c") || (fi.Name == i.ToString() + ".h")
                    || (fi.Name == i.ToString() + ".cpp") || (fi.Name == i.ToString() + ".hpp") 
                    || (fi.Name == i.ToString() + ".cs") || (fi.Name == i.ToString() + ".pas"))
                    {
                        SourceTask.Items.Add("Задача " + i.ToString());
                        lstr.Add(path);
                    }
                }
            }
        }

        private void SourceTask_SelectedIndexChanged(object sender, EventArgs e)
        {
            SourceLog.Clear();
            SourceLog.LoadFile(lstr[SourceTask.SelectedIndex].ToString(), RichTextBoxStreamType.PlainText);
        }



        

    














  



        

    }
}
